<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>江南小哥</title>
    <link>https://yutao.us.kg/</link>
    <description>Recent content on 江南小哥</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>yutao.z@qq.com (江南小哥)</managingEditor>
    <webMaster>yutao.z@qq.com (江南小哥)</webMaster>
    <lastBuildDate>Sun, 28 Jul 2024 15:35:12 +0800</lastBuildDate>
    
        <atom:link href="https://yutao.us.kg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一文让你彻底理解面向对象编程思想</title>
      <link>https://yutao.us.kg/post/%E4%B8%80%E6%96%87%E8%AE%A9%E4%BD%A0%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</link>
      <pubDate>Sun, 28 Jul 2024 15:35:12 +0800</pubDate>
      <author>yutao.z@qq.com (江南小哥)</author>
      <guid>https://yutao.us.kg/post/%E4%B8%80%E6%96%87%E8%AE%A9%E4%BD%A0%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</guid>
      
        <description>&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;
&lt;p&gt;可能还未上计算机课，有同学就听过面向对象这个词。然而老师课堂上讲过之后，貌似当时听明白了，但真做系统开发时大脑一片空白。甚至很多已经工作几年的程序员依然对面向对象这个事糊里糊涂。面向对象思想非常基础，甚至可以说如果不理解面向对象，那你就没有掌握编程密码。我想通过以下几个方面，让你理解面向对象。&lt;/p&gt;
&lt;h2 id=&#34;面向对象分析&#34;&gt;面向对象分析&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;面向过程到面向对象&lt;/li&gt;
&lt;li&gt;面向对象思想模型&lt;/li&gt;
&lt;li&gt;模拟对象&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;面向过程到面向对象&#34;&gt;面向过程到面向对象&lt;/h3&gt;
&lt;p&gt;说来话长，面向对象其实是从面向过程发展而来的。为什么这么说呢？大家都知道，是先有的C语言，然后C++语言，最后才是Java语言。没错，这三个语言真就是按照这个顺序发展的，而且后面的语言是站在前面语言的基础上进行调优发展变得更高级。C语言本身就设定了一些数据类型，比如基本数据类型，就是咱常说的int、char、数组等，又有自定义数据类型，顾名思义结构自己定义，看一段C语言例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 定义学生结构体
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Student {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面定义了学生这么个结构，你看这个时候C里面还管这个叫结构，有两个属性，number和score。假设你现在想对student进行一下操作，比如你想把1学号的学生成绩录入系统，C里面的怎么做？需要先弄一个函数出来，还的先声明，再写函数实现，类似这样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 函数声明
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputStudentData&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Student &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;s);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 输入学生数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inputStudentData&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Student &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;s) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生学号: &amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;number);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生成绩: &amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;score);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着在main函数里面，按照你想的顺进行执行，类似这样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 输入学生人数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生人数: &amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;n);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; Student students[n];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 输入每个学生的数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;输入第%d个学生的信息:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;inputStudentData&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;students[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就把学生的信息保持起来了，后面你可能还想打印学生信息等等，这就得声明一个打印函数，然后再实现这个函数。这会你发现没有，C语言是怎样干活的？结构是结构、函数是函数，分开的，然后main里面根据你想的顺序一步一步干活的。这个时候C++现身了，C++说你的自定义结构、函数是分开的，看着多乱？于是乎C++说，我把他们合起来，都放一块，起个名字叫类，像这样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Student&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 构造函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Student(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number, &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; namnumbere;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Getter和Setter方法
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getNumber&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setNumber&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getScore&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setScore&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;管理学生类&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StudentManager&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Student&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; students;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 添加学生
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; addStudent(Student student) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        students.push_back(student);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 计算平均成绩
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;calculateAverageScore&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (Student student : students) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; student.getScore();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; sum &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; students.size();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在main中对stuent进行操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    StudentManager manager;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 输入学生人数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生人数: &amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 输入每个学生的数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;输入第&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;个学生的信息:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生学号: &amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; number;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;请输入学生成绩: &amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; score;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Student student(number, score);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        manager.addStudent(student);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 计算并打印平均成绩
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; average &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; manager.calculateAverageScore();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;学生的平均成绩: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; average &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;到这，你发现有点不一样了，C++把属性和函数都放到类里面了，方法不再杂乱无章了，用的时候通过实例去调用了。就这么整合一下就牛逼了，没发现啥好处啊？不然不然，这个所谓的整合就是封装，同时还为继承、多态打下基础。C的时候都不在一块你咋继承，现在不一样了，只要你再定义一个类继承前面那个整合，就能把前面整合的内容继承下来，你现在的类就不用再写整合里面的东西了，因为继承后已经有了，省事不？还有多态，咋回事呢？比如小鸟会叫，鸭子也会叫，都是叫，但声音不同，对吧，C的时候，谁叫你就调用谁的方法，main里面你的写两处，但有类之后，就能完成统一，在main里面统一使用接口类型，&lt;code&gt;叫 接收叫 = (传入鸟叫或传入鸭子叫)&lt;/code&gt;，你传入哪个叫，就能表现出那个叫，这就是多态。而Java又是借鉴了C++，优化了内存自动释放等，但核心思想基本与C++相同。&lt;/p&gt;
&lt;h3 id=&#34;面向对象思想模型&#34;&gt;面向对象思想模型&lt;/h3&gt;
&lt;p&gt;你可能也听到这句话：”一切皆对象“，没错，在面向对象的世界中，一切皆对象。面向对象的世界，其实就是现实世界，不信你看你周围的一切，你眼睛所见到的每个物体都为对象。现在我们把现实世界与面向对象世界联系起来。假如你叫张三，是一名程序员，自然你周围的同事也是程序员，还有项目经理，领导，以及大家手里开发的系统等。那么我们就以为张三为中心，进行系统设计。首选张三与同事、领导、项目经理之间需要交流，自然就要赋予张三交流的能力，张三是程序员自然有写代码的能力，同时也要进行需求分析，自然也有需求分析的能力。到这里，我们就可以简单来设计张三这个类。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt; classDiagram
    公司 ..&amp;lt; 制度
    公司 ..&amp;lt; 架构
    公司 ..&amp;lt; 人
    人 &amp;lt;|-- 张三
    人 &amp;lt;|-- 领导
    人 &amp;lt;|-- 项目经理
    人 &amp;#34;1&amp;#34;*--&amp;gt;&amp;#34;2&amp;#34; 胳膊
    项目组&amp;#34;1&amp;#34;o--&amp;gt;&amp;#34;n&amp;#34;项目经理
    项目经理..|&amp;gt;项目计划
    领导&amp;#34;1&amp;#34;--&amp;gt;&amp;#34;1&amp;#34;行政
    公司: + 公司名称
    公司: + 地址
    公司: +业务(String 科技,String 金融)
    公司: +现金流(String 存款)
    公司: +投资(String 现金流)
    项目计划: +项目计划书()
    class 人{
        +生日
        +进食()
        +劳动()
    }
    class 张三{
        -学历
        -交流()
        -需求分析()
        -写代码()
    }
    class 领导{
        +领导气质
        +开会()
        +分批任务()
    }
    class 项目经理{
        +级别
        +立项()
        +项目调研()
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面就可以理解为一个系统，里面有各种人，都是通过人这个类产生出来的，多么像现实社会，系统里面跑到都是人，人与人之间产生各种联系，如果把类理解为模版，当你放入张三就产生张三，放入李四就产生李四，这就是面向对象思想的本质。&lt;/p&gt;
&lt;h3 id=&#34;模拟对象&#34;&gt;模拟对象&lt;/h3&gt;
&lt;p&gt;以一本书来举例子，通过上面的学习，是不是就明白这句话的含义了。书，是不是就是类？没错，是的。只不过，书有很多种，比如科技书籍、文学书籍、小说等等，但都逃不过书这个类。同时他们又有一些共性，比如书名、出版商、价格等，还是通过UML来模拟一下。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt; classDiagram
    书: + 名称
    书: + 出版商
    书 &amp;lt;|-- 科技书籍
    书 &amp;lt;|-- 文学书籍
    书 &amp;lt;|-- 小说书籍
    class 科技书籍 {
        + 科技领域
        +科技知识()
    }
    
    class 文学书籍 {
        + 文学体裁
        +文学知识()
    }

    class 小说书籍 {
        + 小说体裁
        +小说知识()
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;书就是类，不同类别书籍继承了书这个类，又得到了新类，如果落实到具体哪本书，就是实例，是通过类new出来的。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;面向对象思想，将以前过程中用到的自定义结构体、函数等整合在一起，定义为类，再通过类这个模版就能产生无数个实例，不同类实例与实例之间、同类实例与实例之间进行交织，就产生了逻辑联系，如果再赋予业务逻辑，那么自然一个业务系统就通过面向对象思维方式设计出来了。当然一个庞大的系统还有其他框架等等，但单纯从面向对象角度，理解面向对象思维就是你能否设计出系统的关键因素。文章阐述了从过程到面向对象的由来，及具体分析了面向对象思想模型，希望对你有所帮助。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>让搜索引擎收录你的个人博客网站</title>
      <link>https://yutao.us.kg/post/%E8%AE%A9%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link>
      <pubDate>Fri, 26 Jul 2024 16:54:27 +0800</pubDate>
      <author>yutao.z@qq.com (江南小哥)</author>
      <guid>https://yutao.us.kg/post/%E8%AE%A9%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid>
      
        <description>&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;
&lt;p&gt;到目前我们已经搭建好了个人博客，那如何让更多的人知道你的博客呢？这就不得不通过搜索引擎了，如果谷歌、百度等搜索引擎把你收录，这样曝光的机会就增加了。&lt;/p&gt;
&lt;h2 id=&#34;搜索引擎市场份额&#34;&gt;搜索引擎市场份额&lt;/h2&gt;
&lt;p&gt;先看看全球哪些搜索引擎使用率最高，打开这个网站&lt;code&gt;https://gs.statcounter.com/&lt;/code&gt;，可以看到谷歌的市场份额最大。在中国百度的市场份额最大。
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%B8%82%E5%9C%BA%E4%BB%BD%E9%A2%9D.png&#34;&gt;
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%B8%82%E5%9C%BA%E4%BB%BD%E9%A2%9D.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;谷歌收录&#34;&gt;谷歌收录&lt;/h2&gt;
&lt;p&gt;打开谷歌收录网站，&lt;code&gt;https://search.google.com/&lt;/code&gt;，输入网站域名，点击机继续。
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95.png&#34;&gt;
添加谷歌收录验证
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95%E9%AA%8C%E8%AF%81.png&#34;&gt;
向谷歌添加站点地图
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E5%90%91%E8%B0%B7%E6%AD%8C%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE.png&#34;&gt;
谷歌收录就完成了。&lt;/p&gt;
&lt;h2 id=&#34;收录成功&#34;&gt;收录成功&lt;/h2&gt;
&lt;p&gt;过一段时间后你可以通过搜索框输入site:xxx.com 或者进入Google Search Console来查看收录情况和流量情况。下图是因为刚刚添加，谷歌还在验证。根据经验，网站更新频繁、有人维护，被收录的速度就会快。
&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95%E6%88%90%E5%8A%9F.png&#34;&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://yutao.us.kg/about/</link>
      <pubDate>Thu, 25 Jul 2024 13:44:44 +0800</pubDate>
      <author>yutao.z@qq.com (江南小哥)</author>
      <guid>https://yutao.us.kg/about/</guid>
      
        <description>&lt;h1 id=&#34;个人介绍&#34;&gt;个人介绍&lt;/h1&gt;
&lt;p&gt;个人网站：&lt;a href=&#34;https://www.yutao.us.kg/&#34;&gt;https://www.yutao.us.kg/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;北方人，人在江南，心也在江南。目前定居&lt;strong&gt;上海&lt;/strong&gt;，&lt;code&gt;互联网金融科技从业者&lt;/code&gt;，在博客平台上记录和分享最新的&lt;code&gt;科技互联网相关技术&lt;/code&gt;、&lt;code&gt;金融知识&lt;/code&gt;、&lt;code&gt;使用教程&lt;/code&gt;。欢迎你的关注和支持。&lt;/p&gt;
&lt;h1 id=&#34;微信公众号&#34;&gt;微信公众号&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/about/%E5%85%AC%E4%BC%97%E5%8F%B7.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;邮箱&#34;&gt;邮箱&lt;/h1&gt;
&lt;p&gt;欢迎发送邮件进行交流合作：&lt;code&gt;yutao.z@qq.com&lt;/code&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>从零搭建个人博客系统</title>
      <link>https://yutao.us.kg/post/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Fri, 05 Jul 2024 09:23:49 +0800</pubDate>
      <author>yutao.z@qq.com (江南小哥)</author>
      <guid>https://yutao.us.kg/post/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</guid>
      
        <description>&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;
&lt;p&gt;使用个人博客也有多年的时间，比如博客园。 博客对个人学习好处很多，能记录所思所感，便于技术积累。一直想折腾一个自己的博客，前后也试过几个都不理想。直到发现现在这个模式，现在把从零开始搭建个人博客的经验分享在这里。&lt;br&gt;
分享地址：&lt;a href=&#34;https://yutao.us.kg/&#34;&gt;https://yutao.us.kg/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;搭建概览&#34;&gt;搭建概览&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;申请免费域名&lt;/li&gt;
&lt;li&gt;使用Hugo博客框架&lt;/li&gt;
&lt;li&gt;博客部署到Github Pages&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;具体操作&#34;&gt;具体操作&lt;/h2&gt;
&lt;h3 id=&#34;申请免费域名&#34;&gt;申请免费域名&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开该网站&lt;a href=&#34;https://register.us.kg/&#34;&gt;https://register.us.kg/&lt;/a&gt;，并注册用户，注册名称既域名。&lt;/li&gt;
&lt;li&gt;注册时提示输入美国身份信息，这里可以使用&lt;a href=&#34;https://www.shenfendaquan.com/&#34;&gt;https://www.shenfendaquan.com/&lt;/a&gt;。
参考截图：&lt;img alt=&#34;图片&#34; src=&#34;https://yutao.us.kg/image/blog/%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;打开该网站&lt;a href=&#34;https://cloudflare.com/&#34;&gt;https://cloudflare.com/&lt;/a&gt;，并注册用户，然后点击左侧网站按钮，添加站点，将刚刚申请的域名添加，选择免费。&lt;/li&gt;
&lt;li&gt;拷贝cloudflare分配的2个名称服务器地址，回填到&lt;a href=&#34;https://register.us.kg/&#34;&gt;https://register.us.kg/&lt;/a&gt;，NameServer1和NameServer2。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;使用hugo博客框架&#34;&gt;使用Hugo博客框架&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Hugo，也就是静态网站生成框架，构建了一套代码生成框架和各种可选的主题。通过hugo框架将Markdown语法编译成HTML文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows安装包管理器有choco、scoop、winget，这我使用choco。安装了该软件就等于安装了软件市场。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Go软件包，打开CMD命令窗口，执行：&lt;code&gt;choco install go&lt;/code&gt;。安装完成后执行：&lt;code&gt;refreshenv&lt;/code&gt;刷新环境变量。然后查看go版本，执行：&lt;code&gt;go version&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装git，进入cmd命令窗口，执行：&lt;code&gt;choco install git&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装hugo，进入cmd命令窗口，执行：&lt;code&gt;choco install hugo-extended&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过cmd窗口进入指定目录，创建站点命令：&lt;code&gt;hugo new site jnsoft&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cmd切换到jnsoft目录，安装主题，我使用Jane主题，&lt;code&gt;git clone https://github.com/xianmin/hugo-theme-jane.git --depth=1 themes/jane&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入jntech\themes\jane\exampleSite，复制config.toml文件内容，黏贴到根目录hugo.toml内。并将如下内容修改为自己的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baseURL = &amp;#34;http://localhost:1313/&amp;#34; # 博客部署网址
title = &amp;#34;江南小哥&amp;#34; # 网站名称
enableRobotsTXT = true # 是否支持Robots协议
enableEmoji = true # 是否支持Emoji表情符号
theme = &amp;#34;jane&amp;#34; # 选用jane主题
defaultContentLanguage = &amp;#34;zh-cn&amp;#34;           # Default language to use
[languages.zh-cn]
languageCode = &amp;#34;zh-cn&amp;#34;

[[menu.main]] # 配置菜单
name = &amp;#34;主页&amp;#34;
weight = 10
identifier = &amp;#34;home&amp;#34;
pageref = &amp;#34;/&amp;#34;
[[menu.main]]
name = &amp;#34;归档&amp;#34;
weight = 20
identifier = &amp;#34;archives&amp;#34;
pageref = &amp;#34;/post/&amp;#34;
[[menu.main]]
name = &amp;#34;分类&amp;#34;
weight = 30
identifier = &amp;#34;categories&amp;#34;
pageref = &amp;#34;/categories/&amp;#34;
[[menu.main]]
name = &amp;#34;标签&amp;#34;
weight = 40
identifier = &amp;#34;tags&amp;#34;
pageref = &amp;#34;/tags/&amp;#34;
[[menu.main]]
name = &amp;#34;关于&amp;#34;
weight = 50
identifier = &amp;#34;about&amp;#34;
pageref = &amp;#34;/about/&amp;#34;
logoTitle = &amp;#34;江南小哥&amp;#34; # default: the title value    # 默认值: 上面设置的title值
keywords = [&amp;#34;金融&amp;#34;,&amp;#34;编程&amp;#34;, &amp;#34;科技&amp;#34;]  # 关键字，应该是与搜索引擎搜索有关，博客内无展示
description = &amp;#34;江南科技&amp;#34;  # 网页描述
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过cmd切换到jnsoft目录，执行：&lt;code&gt;hugo server&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开浏览器&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;即可访问本地博客。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建第一篇博客，jnsoft目录下，新增文件：hugo new post/从零搭建个人博客系统.md&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;博客部署到github-pages&#34;&gt;博客部署到Github Pages&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;你要部署在GitHub Pages上，首先在GitHub上创建一个Repository，命名为：&lt;code&gt;{your_username}.github.io&lt;/code&gt;。比如我的Repo就叫 &lt;code&gt;yutaodev.github.io&lt;/code&gt;，并在Pages页面设置好刚申请的域名绑定。&lt;/li&gt;
&lt;li&gt;现在我们有了Hugo个人站点，有了Github Pages，那么下一步就是把hugo博客发布到Github。这样我们才能在互联网的任何地方访问我们的博客。在我们本地的hugo根目录中执行：&lt;code&gt;hugo&lt;/code&gt;指令。会生成一个public文件夹，我们只需要把public的文件内容上传到github上刚才创建的Github仓库里面, 一分钟左右，就能正常查看博客内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;本博客最大优点，不花一分钱，完全免费，也不用关心博客运维，而且只要Github在你的博客就在，你就集中精力写博客就行。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
